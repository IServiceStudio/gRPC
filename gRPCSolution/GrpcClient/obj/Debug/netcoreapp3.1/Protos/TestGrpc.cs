// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/test.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace GrpcServer.Protos {
  /// <summary>
  /// The greeting service definition.
  /// </summary>
  public static partial class Test
  {
    static readonly string __ServiceName = "test.Test";

    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    static readonly grpc::Marshaller<global::GrpcServer.Protos.HelloRequest_Test> __Marshaller_test_HelloRequest_Test = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcServer.Protos.HelloRequest_Test.Parser));
    static readonly grpc::Marshaller<global::GrpcServer.Protos.HelloReply_Test> __Marshaller_test_HelloReply_Test = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcServer.Protos.HelloReply_Test.Parser));
    static readonly grpc::Marshaller<global::GrpcServer.Protos.RequestPara> __Marshaller_test_RequestPara = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcServer.Protos.RequestPara.Parser));
    static readonly grpc::Marshaller<global::GrpcServer.Protos.ResponseResult> __Marshaller_test_ResponseResult = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcServer.Protos.ResponseResult.Parser));
    static readonly grpc::Marshaller<global::GrpcServer.Protos.BatchTheCatReq> __Marshaller_test_BatchTheCatReq = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcServer.Protos.BatchTheCatReq.Parser));
    static readonly grpc::Marshaller<global::GrpcServer.Protos.IntArrayModel> __Marshaller_test_IntArrayModel = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcServer.Protos.IntArrayModel.Parser));
    static readonly grpc::Marshaller<global::GrpcServer.Protos.BatchTheCatResp> __Marshaller_test_BatchTheCatResp = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcServer.Protos.BatchTheCatResp.Parser));
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Empty.Parser));
    static readonly grpc::Marshaller<global::GrpcServer.Protos.CountResult> __Marshaller_test_CountResult = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcServer.Protos.CountResult.Parser));

    static readonly grpc::Method<global::GrpcServer.Protos.HelloRequest_Test, global::GrpcServer.Protos.HelloReply_Test> __Method_SayHello = new grpc::Method<global::GrpcServer.Protos.HelloRequest_Test, global::GrpcServer.Protos.HelloReply_Test>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SayHello",
        __Marshaller_test_HelloRequest_Test,
        __Marshaller_test_HelloReply_Test);

    static readonly grpc::Method<global::GrpcServer.Protos.RequestPara, global::GrpcServer.Protos.ResponseResult> __Method_Plus = new grpc::Method<global::GrpcServer.Protos.RequestPara, global::GrpcServer.Protos.ResponseResult>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Plus",
        __Marshaller_test_RequestPara,
        __Marshaller_test_ResponseResult);

    static readonly grpc::Method<global::GrpcServer.Protos.BatchTheCatReq, global::GrpcServer.Protos.IntArrayModel> __Method_SelfIncreaseClient = new grpc::Method<global::GrpcServer.Protos.BatchTheCatReq, global::GrpcServer.Protos.IntArrayModel>(
        grpc::MethodType.ClientStreaming,
        __ServiceName,
        "SelfIncreaseClient",
        __Marshaller_test_BatchTheCatReq,
        __Marshaller_test_IntArrayModel);

    static readonly grpc::Method<global::GrpcServer.Protos.IntArrayModel, global::GrpcServer.Protos.BatchTheCatResp> __Method_SelfIncreaseServer = new grpc::Method<global::GrpcServer.Protos.IntArrayModel, global::GrpcServer.Protos.BatchTheCatResp>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "SelfIncreaseServer",
        __Marshaller_test_IntArrayModel,
        __Marshaller_test_BatchTheCatResp);

    static readonly grpc::Method<global::GrpcServer.Protos.BatchTheCatReq, global::GrpcServer.Protos.BatchTheCatResp> __Method_SelfIncreaseDouble = new grpc::Method<global::GrpcServer.Protos.BatchTheCatReq, global::GrpcServer.Protos.BatchTheCatResp>(
        grpc::MethodType.DuplexStreaming,
        __ServiceName,
        "SelfIncreaseDouble",
        __Marshaller_test_BatchTheCatReq,
        __Marshaller_test_BatchTheCatResp);

    static readonly grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::GrpcServer.Protos.CountResult> __Method_Count = new grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::GrpcServer.Protos.CountResult>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Count",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_test_CountResult);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::GrpcServer.Protos.TestReflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for Test</summary>
    public partial class TestClient : grpc::ClientBase<TestClient>
    {
      /// <summary>Creates a new client for Test</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public TestClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Test that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public TestClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected TestClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected TestClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Sends a greeting
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::GrpcServer.Protos.HelloReply_Test SayHello(global::GrpcServer.Protos.HelloRequest_Test request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SayHello(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Sends a greeting
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::GrpcServer.Protos.HelloReply_Test SayHello(global::GrpcServer.Protos.HelloRequest_Test request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SayHello, null, options, request);
      }
      /// <summary>
      /// Sends a greeting
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::GrpcServer.Protos.HelloReply_Test> SayHelloAsync(global::GrpcServer.Protos.HelloRequest_Test request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SayHelloAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Sends a greeting
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::GrpcServer.Protos.HelloReply_Test> SayHelloAsync(global::GrpcServer.Protos.HelloRequest_Test request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SayHello, null, options, request);
      }
      public virtual global::GrpcServer.Protos.ResponseResult Plus(global::GrpcServer.Protos.RequestPara request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Plus(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GrpcServer.Protos.ResponseResult Plus(global::GrpcServer.Protos.RequestPara request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Plus, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcServer.Protos.ResponseResult> PlusAsync(global::GrpcServer.Protos.RequestPara request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PlusAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcServer.Protos.ResponseResult> PlusAsync(global::GrpcServer.Protos.RequestPara request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Plus, null, options, request);
      }
      public virtual grpc::AsyncClientStreamingCall<global::GrpcServer.Protos.BatchTheCatReq, global::GrpcServer.Protos.IntArrayModel> SelfIncreaseClient(grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SelfIncreaseClient(new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncClientStreamingCall<global::GrpcServer.Protos.BatchTheCatReq, global::GrpcServer.Protos.IntArrayModel> SelfIncreaseClient(grpc::CallOptions options)
      {
        return CallInvoker.AsyncClientStreamingCall(__Method_SelfIncreaseClient, null, options);
      }
      public virtual grpc::AsyncServerStreamingCall<global::GrpcServer.Protos.BatchTheCatResp> SelfIncreaseServer(global::GrpcServer.Protos.IntArrayModel request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SelfIncreaseServer(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncServerStreamingCall<global::GrpcServer.Protos.BatchTheCatResp> SelfIncreaseServer(global::GrpcServer.Protos.IntArrayModel request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_SelfIncreaseServer, null, options, request);
      }
      public virtual grpc::AsyncDuplexStreamingCall<global::GrpcServer.Protos.BatchTheCatReq, global::GrpcServer.Protos.BatchTheCatResp> SelfIncreaseDouble(grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SelfIncreaseDouble(new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncDuplexStreamingCall<global::GrpcServer.Protos.BatchTheCatReq, global::GrpcServer.Protos.BatchTheCatResp> SelfIncreaseDouble(grpc::CallOptions options)
      {
        return CallInvoker.AsyncDuplexStreamingCall(__Method_SelfIncreaseDouble, null, options);
      }
      public virtual global::GrpcServer.Protos.CountResult Count(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Count(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GrpcServer.Protos.CountResult Count(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Count, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcServer.Protos.CountResult> CountAsync(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CountAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcServer.Protos.CountResult> CountAsync(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Count, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override TestClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new TestClient(configuration);
      }
    }

  }
}
#endregion
